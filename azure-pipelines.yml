# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

pool:
  vmImage: 'Ubuntu 16.04'

trigger:
- azure-test

steps:
- task: NodeTool@0
  displayName: Setup Node.js
  inputs:
    versionSpec: '10.x'

- script: npm install
  displayName: Install Dependencies

- script: npm run build-production
  displayName: Build Application
  env:
    IS_CI_BUILD: true

- script: npm run test-frontend && node ./process-coverage-report.js
  displayName: Run Unit Tests

- task: PublishTestResults@2
  displayName: Publish Test Report
  inputs:
    testResultsFiles: '$(System.DefaultWorkingDirectory)/test-report/**/result.xml'
    testRunTitle: 'Sample app test results'
  condition: succeededOrFailed()

- task: PublishCodeCoverageResults@1
  displayName: Publish Code Coverage Report
  inputs:
    codeCoverageTool: Cobertura
    summaryFileLocation: '$(System.DefaultWorkingDirectory)/coverage/*coverage.xml'
    reportDirectory: '$(System.DefaultWorkingDirectory)/coverage'

- task: CopyFiles@2
  displayName: Create Staging Directory
  inputs:
    SourceFolder: '$(System.DefaultWorkingDirectory)'
    Contents: |
      dist/**/*.*
      package.json
      package-lock.json
      LICENSE
    TargetFolder: '$(Build.ArtifactStagingDirectory)'

- task: ArchiveFiles@2
  displayName: Archive Files
  inputs:
    rootFolderOrFile: '$(Build.ArtifactStagingDirectory)'
    includeRootFolder: false

- task: PublishBuildArtifacts@1
  displayName: Publish Build Artifacts
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
